"""
Respuestas hardcodeadas para el Discord Bot

Este m√≥dulo contiene las respuestas predefinidas que el bot puede usar
antes de integrar los agentes IA.
"""

import random

# Respuestas de saludo
GREETINGS = [
    "¬°Hola! üëã Soy Ithaka Bot, tu asistente virtual.",
    "¬°Hola! ¬øEn qu√© puedo ayudarte hoy?",
    "¬°Saludos! Estoy aqu√≠ para responder tus preguntas.",
    "¬°Hola! Bienvenido/a. ¬øC√≥mo puedo asistirte?",
]

# Respuestas sobre el proyecto Ithaka
ITHAKA_INFO = [
    "Ithaka es un proyecto educativo innovador que utiliza IA para mejorar el aprendizaje.",
    "El proyecto Ithaka combina tecnolog√≠a avanzada con pedagog√≠a moderna.",
    "Ithaka est√° dise√±ado para proporcionar una experiencia de aprendizaje personalizada.",
]

# Respuestas t√©cnicas b√°sicas
TECH_RESPONSES = [
    "Este bot est√° construido con Python y discord.py üêç",
    "Utilizo FastAPI como backend y PostgreSQL como base de datos.",
    "Estoy preparado para integrar agentes IA en el futuro.",
    "Mi arquitectura est√° basada en microservicios y tecnolog√≠as modernas.",
]

# Respuestas de ayuda
HELP_RESPONSES = [
    "Aqu√≠ est√°n mis comandos disponibles:",
    "Puedo ayudarte con informaci√≥n sobre el proyecto Ithaka.",
    "Estoy en desarrollo, pero ya puedo responder algunas preguntas b√°sicas.",
]

# Respuestas cuando no se entiende la pregunta
FALLBACK_RESPONSES = [
    "Lo siento, no entiendo esa pregunta. ¬øPuedes reformularla?",
    "No estoy seguro de c√≥mo responder a eso. ¬øPuedes ser m√°s espec√≠fico?",
    "Esa pregunta est√° fuera de mi conocimiento actual. ¬øHay algo m√°s en lo que pueda ayudarte?",
    "No tengo informaci√≥n sobre eso en este momento. ¬øTe puedo ayudar con algo m√°s?",
]

# Respuestas de despedida
GOODBYE_RESPONSES = [
    "¬°Hasta luego! üëã Que tengas un buen d√≠a.",
    "¬°Adi√≥s! Espero haberte sido √∫til.",
    "¬°Nos vemos pronto! üòä",
    "¬°Que tengas un excelente d√≠a!",
]

# FAQ hardcodeadas
FAQS = {
    "qu√© es ithaka": "Ithaka es un proyecto educativo que utiliza inteligencia artificial para personalizar el aprendizaje.",
    "c√≥mo funciona": "Ithaka utiliza agentes IA para analizar las necesidades de aprendizaje y proporcionar contenido personalizado.",
    "tecnolog√≠a": "Estoy construido con Python, FastAPI, PostgreSQL, y discord.py. Tambi√©n uso OpenAI para funcionalidades de IA.",
    "contacto": "Puedes contactar al equipo de desarrollo a trav√©s de los canales oficiales del proyecto.",
    "caracter√≠sticas": "Ofrezco respuestas inteligentes, integraci√≥n con IA, y una interfaz amigable a trav√©s de Discord.",
}

def get_random_response(response_list: list) -> str:
    """Retorna una respuesta aleatoria de la lista proporcionada."""
    return random.choice(response_list)

from typing import Optional, Union

def search_faq(query: str) -> Optional[str]:
    """
    Busca en las FAQs una respuesta que coincida con la consulta.
    
    Args:
        query: La consulta del usuario
        
    Returns:
        La respuesta encontrada o None si no hay coincidencias
    """
    query_lower = query.lower()
    
    # Buscar coincidencias exactas o parciales
    for key, answer in FAQS.items():
        if key in query_lower or any(word in query_lower for word in key.split()):
            return answer
    
    return None

def get_contextual_response(message_content: str) -> str:
    """
    Genera una respuesta contextual basada en el contenido del mensaje.
    
    Args:
        message_content: El contenido del mensaje del usuario
        
    Returns:
        Una respuesta apropiada
    """
    content_lower = message_content.lower()
    
    # Patrones de saludo
    greeting_patterns = ['hola', 'hey', 'buenos d√≠as', 'buenas tardes', 'buenas noches', 'saludos']
    if any(pattern in content_lower for pattern in greeting_patterns):
        return get_random_response(GREETINGS)
    
    # Patrones de despedida
    goodbye_patterns = ['adi√≥s', 'chao', 'hasta luego', 'nos vemos', 'bye']
    if any(pattern in content_lower for pattern in goodbye_patterns):
        return get_random_response(GOODBYE_RESPONSES)
    
    # Patrones de ayuda
    help_patterns = ['ayuda', 'help', 'qu√© puedes hacer', 'comandos']
    if any(pattern in content_lower for pattern in help_patterns):
        return get_random_response(HELP_RESPONSES)
    
    # Buscar en FAQs
    faq_response = search_faq(content_lower)
    if faq_response:
        return faq_response
    
    # Patrones t√©cnicos
    tech_patterns = ['tecnolog√≠a', 'c√≥mo est√°s hecho', 'python', 'fastapi', 'database']
    if any(pattern in content_lower for pattern in tech_patterns):
        return get_random_response(TECH_RESPONSES)
    
    # Respuesta por defecto
    return get_random_response(FALLBACK_RESPONSES)
